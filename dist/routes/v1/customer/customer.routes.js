"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const custommField_controller_1 = require("../../../controllers/customer/custommField.controller");
const jwt_token_1 = require("../../../core/middleware/jwt/jwt.token");
const customer_controller_1 = require("../../../controllers/customer/customer.controller");
const customerProduct_controller_1 = require("../../../controllers/customer/customerProduct.controller");
const reminder_controller_1 = require("../../../controllers/customer/reminder.controller");
const customer_bulk_controller_1 = require("../../../controllers/customer/customer.bulk.controller");
const fileUpload_1 = require("../../../core/middleware/multer/fileUpload");
const router = (0, express_1.Router)();
router.get("/customfield", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "partner", "team_member", "sub_admin"), custommField_controller_1.listAdminCustomFields);
router.post("/customfield", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "sub_admin"), custommField_controller_1.createAdminCustomField);
router.put("/customfield/:id", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "sub_admin"), custommField_controller_1.updateAdminCustomField);
router.delete("/customfield/:id", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "sub_admin"), custommField_controller_1.deleteAdminCustomField);
router.get("/list", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "partner", "team_member", "sub_admin"), customer_controller_1.listCustomers);
router.post("/add", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "partner", "sub_admin", "team_member"), customer_controller_1.createCustomer);
router.patch("/update/:id", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "partner", "sub_admin", "team_member"), customer_controller_1.updateCustomer);
router.patch("/status/:id", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "partner", "team_member", "sub_admin"), customer_controller_1.setCustomerStatus);
router.patch("/product/update/:customerId/:ProductId", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "partner", "team_member", "sub_admin"), customer_controller_1.editCustomerProduct);
router.delete("/delete/:id", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "partner", "sub_admin"), customer_controller_1.deleteCustomer);
router.get("/product/:customerId", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "partner", "team_member", "sub_admin"), customerProduct_controller_1.getCustomerProductsByCustomerId);
router.patch("/product/update/:id", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "partner", "team_member", "sub_admin"), reminder_controller_1.updateCustomerProduct);
router.get("/reminders", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "partner", "team_member", "sub_admin"), reminder_controller_1.listRenewalReminders);
router.post("/bulk", fileUpload_1.upload.single("file"), jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "partner", "team_member", "sub_admin"), customer_bulk_controller_1.bulkVerifyCustomers);
router.post("/bulk-upload", fileUpload_1.upload.single("file"), jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin", "partner", "team_member", "sub_admin"), customer_bulk_controller_1.bulkCreateCustomers);
exports.default = router;
//# sourceMappingURL=customer.routes.js.map