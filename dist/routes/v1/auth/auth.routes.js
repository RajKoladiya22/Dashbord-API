"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const auth_controller_1 = require("../../../controllers/auth/auth.controller");
const partnerAuth_controller_1 = require("../../../controllers/auth/partnerAuth.controller");
const jwt_token_1 = require("../../../core/middleware/jwt/jwt.token");
const teamAuth_controller_1 = require("../../../controllers/auth/teamAuth.controller");
const profile_controller_1 = require("../../../controllers/auth/profile.controller");
const forgotPassword_controller_1 = require("../../../controllers/auth/forgotPassword.controller");
const resetPassword_controller_1 = require("../../../controllers/auth/resetPassword.controller");
const superAdmin_controller_1 = require("../../../controllers/auth/superAdmin.controller");
const role_controller_1 = require("../../../controllers/auth/role.controller");
const router = (0, express_1.Router)();
router.post("/super-admin/signup", auth_controller_1.signUpSuperAdmin);
router.post("/signup", auth_controller_1.signUpAdmin);
router.post("/signin", auth_controller_1.signIn);
router.patch("/profile", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("super_admin", "admin", "partner", "team_member"), profile_controller_1.updateProfile);
router.get("/profile", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("super_admin", "admin", "partner", "team_member"), profile_controller_1.getProfile);
router.post("/forgot-password", forgotPassword_controller_1.forgotPassword);
router.post("/reset-password", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("super_admin", "admin", "partner", "team_member"), resetPassword_controller_1.resetPassword);
router.post("/partner", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin"), partnerAuth_controller_1.createPartner);
router.post("/team", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin"), teamAuth_controller_1.createTeamMember);
router.get("/admins", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("super_admin"), superAdmin_controller_1.listAllAdmins);
router.get("/admins/:id/:query", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("super_admin"), superAdmin_controller_1.subAdminDetails);
router.patch("/role/:id/", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("admin"), role_controller_1.updateTeamRole);
router.patch("/admins/status/:id", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("super_admin"), superAdmin_controller_1.approveAdmin);
router.delete("/admins/delete/:id", jwt_token_1.authenticateUser, (0, jwt_token_1.authorizeRoles)("super_admin"), superAdmin_controller_1.deleteAdminAndAssociatedData);
exports.default = router;
//# sourceMappingURL=auth.routes.js.map